import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from "@/components/ui/sonner"
import { io } from "socket.io-client";
import TanstackQueryProvider from '@/contexts/TanstackQueryProvider'
import { headers } from "next/headers";
import SocketProvider from '@/contexts/SocketProvider'
import AuthProvider from "@/contexts/AuthProvider";
import { NextSSRPlugin } from "@uploadthing/react/next-ssr-plugin";
import { extractRouterConfig } from "uploadthing/server";
import { ourFileRouter } from "@/app/api/uploadthing/core";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const email = (await headers()).get("x-userEmail")

  const socket = io('http://localhost:8080?email="siddhant.ota@gmail.com"', {
    auth: {
      email: email,
    },
    withCredentials: true,
  });

  socket.on("connect", () => {
    console.log("connected");
  });

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <TanstackQueryProvider>
          <SocketProvider userEmail={email}>
            <AuthProvider email={email}>
              <NextSSRPlugin routerConfig={extractRouterConfig(ourFileRouter)} />
              {children}
            </AuthProvider>
          </SocketProvider>
        </TanstackQueryProvider>
        <Toaster />
      </body>
    </html >
  );
}
